//
// File generated by rootcint at Wed Jan 14 10:55:20 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME ireneDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "ireneDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< ::TLorentzVector, double > pairlETLorentzVectorcOdoublegR;
      #else
      class pairlETLorentzVectorcOdoublegR  {
         public:
         //friend XX;
         ::TLorentzVector first; //
         double second; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace irene {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void irene_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("irene", 0 /*version*/, "./src/Units.h", 15,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &irene_Dictionary, 4);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void irene_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOT {
   void irenecLcLSensorHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_irenecLcLSensorHit(void *p = 0);
   static void *newArray_irenecLcLSensorHit(Long_t size, void *p);
   static void delete_irenecLcLSensorHit(void *p);
   static void deleteArray_irenecLcLSensorHit(void *p);
   static void destruct_irenecLcLSensorHit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::irene::SensorHit*)
   {
      ::irene::SensorHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::irene::SensorHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("irene::SensorHit", ::irene::SensorHit::Class_Version(), "./src/SensorHit.h", 21,
                  typeid(::irene::SensorHit), DefineBehavior(ptr, ptr),
                  &::irene::SensorHit::Dictionary, isa_proxy, 4,
                  sizeof(::irene::SensorHit) );
      instance.SetNew(&new_irenecLcLSensorHit);
      instance.SetNewArray(&newArray_irenecLcLSensorHit);
      instance.SetDelete(&delete_irenecLcLSensorHit);
      instance.SetDeleteArray(&deleteArray_irenecLcLSensorHit);
      instance.SetDestructor(&destruct_irenecLcLSensorHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::irene::SensorHit*)
   {
      return GenerateInitInstanceLocal((::irene::SensorHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::irene::SensorHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void irenecLcLTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_irenecLcLTrack(void *p = 0);
   static void *newArray_irenecLcLTrack(Long_t size, void *p);
   static void delete_irenecLcLTrack(void *p);
   static void deleteArray_irenecLcLTrack(void *p);
   static void destruct_irenecLcLTrack(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::irene::Track*)
   {
      ::irene::Track *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::irene::Track >(0);
      static ::ROOT::TGenericClassInfo 
         instance("irene::Track", ::irene::Track::Class_Version(), "./src/Track.h", 26,
                  typeid(::irene::Track), DefineBehavior(ptr, ptr),
                  &::irene::Track::Dictionary, isa_proxy, 4,
                  sizeof(::irene::Track) );
      instance.SetNew(&new_irenecLcLTrack);
      instance.SetNewArray(&newArray_irenecLcLTrack);
      instance.SetDelete(&delete_irenecLcLTrack);
      instance.SetDeleteArray(&deleteArray_irenecLcLTrack);
      instance.SetDestructor(&destruct_irenecLcLTrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::irene::Track*)
   {
      return GenerateInitInstanceLocal((::irene::Track*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::irene::Track*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void irenecLcLParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_irenecLcLParticle(void *p = 0);
   static void *newArray_irenecLcLParticle(Long_t size, void *p);
   static void delete_irenecLcLParticle(void *p);
   static void deleteArray_irenecLcLParticle(void *p);
   static void destruct_irenecLcLParticle(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::irene::Particle*)
   {
      ::irene::Particle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::irene::Particle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("irene::Particle", ::irene::Particle::Class_Version(), "./src/Particle.h", 29,
                  typeid(::irene::Particle), DefineBehavior(ptr, ptr),
                  &::irene::Particle::Dictionary, isa_proxy, 4,
                  sizeof(::irene::Particle) );
      instance.SetNew(&new_irenecLcLParticle);
      instance.SetNewArray(&newArray_irenecLcLParticle);
      instance.SetDelete(&delete_irenecLcLParticle);
      instance.SetDeleteArray(&deleteArray_irenecLcLParticle);
      instance.SetDestructor(&destruct_irenecLcLParticle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::irene::Particle*)
   {
      return GenerateInitInstanceLocal((::irene::Particle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::irene::Particle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void irenecLcLEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_irenecLcLEvent(void *p = 0);
   static void *newArray_irenecLcLEvent(Long_t size, void *p);
   static void delete_irenecLcLEvent(void *p);
   static void deleteArray_irenecLcLEvent(void *p);
   static void destruct_irenecLcLEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::irene::Event*)
   {
      ::irene::Event *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::irene::Event >(0);
      static ::ROOT::TGenericClassInfo 
         instance("irene::Event", ::irene::Event::Class_Version(), "./src/Event.h", 30,
                  typeid(::irene::Event), DefineBehavior(ptr, ptr),
                  &::irene::Event::Dictionary, isa_proxy, 4,
                  sizeof(::irene::Event) );
      instance.SetNew(&new_irenecLcLEvent);
      instance.SetNewArray(&newArray_irenecLcLEvent);
      instance.SetDelete(&delete_irenecLcLEvent);
      instance.SetDeleteArray(&deleteArray_irenecLcLEvent);
      instance.SetDestructor(&destruct_irenecLcLEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::irene::Event*)
   {
      return GenerateInitInstanceLocal((::irene::Event*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::irene::Event*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void pairlETLorentzVectorcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pairlETLorentzVectorcOdoublegR_Dictionary();
   static void *new_pairlETLorentzVectorcOdoublegR(void *p = 0);
   static void *newArray_pairlETLorentzVectorcOdoublegR(Long_t size, void *p);
   static void delete_pairlETLorentzVectorcOdoublegR(void *p);
   static void deleteArray_pairlETLorentzVectorcOdoublegR(void *p);
   static void destruct_pairlETLorentzVectorcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const pair<TLorentzVector,double>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(pair<TLorentzVector,double>) == sizeof(::ROOT::Shadow::pairlETLorentzVectorcOdoublegR));
      pair<TLorentzVector,double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<TLorentzVector,double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("pair<TLorentzVector,double>", "/Applications/root/cint/cint/lib/prec_stl/utility", 17,
                  typeid(pair<TLorentzVector,double>), DefineBehavior(ptr, ptr),
                  &pairlETLorentzVectorcOdoublegR_ShowMembers, &pairlETLorentzVectorcOdoublegR_Dictionary, isa_proxy, 4,
                  sizeof(pair<TLorentzVector,double>) );
      instance.SetNew(&new_pairlETLorentzVectorcOdoublegR);
      instance.SetNewArray(&newArray_pairlETLorentzVectorcOdoublegR);
      instance.SetDelete(&delete_pairlETLorentzVectorcOdoublegR);
      instance.SetDeleteArray(&deleteArray_pairlETLorentzVectorcOdoublegR);
      instance.SetDestructor(&destruct_pairlETLorentzVectorcOdoublegR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const pair<TLorentzVector,double>*)
   {
      return GenerateInitInstanceLocal((pair<TLorentzVector,double>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const pair<TLorentzVector,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlETLorentzVectorcOdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const pair<TLorentzVector,double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void irenecLcLParameterInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_irenecLcLParameterInfo(void *p = 0);
   static void *newArray_irenecLcLParameterInfo(Long_t size, void *p);
   static void delete_irenecLcLParameterInfo(void *p);
   static void deleteArray_irenecLcLParameterInfo(void *p);
   static void destruct_irenecLcLParameterInfo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::irene::ParameterInfo*)
   {
      ::irene::ParameterInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::irene::ParameterInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("irene::ParameterInfo", ::irene::ParameterInfo::Class_Version(), "./src/ParameterInfo.h", 23,
                  typeid(::irene::ParameterInfo), DefineBehavior(ptr, ptr),
                  &::irene::ParameterInfo::Dictionary, isa_proxy, 4,
                  sizeof(::irene::ParameterInfo) );
      instance.SetNew(&new_irenecLcLParameterInfo);
      instance.SetNewArray(&newArray_irenecLcLParameterInfo);
      instance.SetDelete(&delete_irenecLcLParameterInfo);
      instance.SetDeleteArray(&deleteArray_irenecLcLParameterInfo);
      instance.SetDestructor(&destruct_irenecLcLParameterInfo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::irene::ParameterInfo*)
   {
      return GenerateInitInstanceLocal((::irene::ParameterInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::irene::ParameterInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

      namespace irene {
//______________________________________________________________________________
TClass *SensorHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *SensorHit::Class_Name()
{
   return "irene::SensorHit";
}

//______________________________________________________________________________
const char *SensorHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::irene::SensorHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SensorHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::irene::SensorHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SensorHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::irene::SensorHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SensorHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::irene::SensorHit*)0x0)->GetClass();
   return fgIsA;
}

} // namespace irene
      namespace irene {
//______________________________________________________________________________
TClass *Track::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Track::Class_Name()
{
   return "irene::Track";
}

//______________________________________________________________________________
const char *Track::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::irene::Track*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Track::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::irene::Track*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Track::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::irene::Track*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Track::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::irene::Track*)0x0)->GetClass();
   return fgIsA;
}

} // namespace irene
      namespace irene {
//______________________________________________________________________________
TClass *Particle::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Particle::Class_Name()
{
   return "irene::Particle";
}

//______________________________________________________________________________
const char *Particle::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::irene::Particle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Particle::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::irene::Particle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Particle::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::irene::Particle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Particle::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::irene::Particle*)0x0)->GetClass();
   return fgIsA;
}

} // namespace irene
      namespace irene {
//______________________________________________________________________________
TClass *Event::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Event::Class_Name()
{
   return "irene::Event";
}

//______________________________________________________________________________
const char *Event::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::irene::Event*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Event::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::irene::Event*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Event::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::irene::Event*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Event::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::irene::Event*)0x0)->GetClass();
   return fgIsA;
}

} // namespace irene
      namespace irene {
//______________________________________________________________________________
TClass *ParameterInfo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ParameterInfo::Class_Name()
{
   return "irene::ParameterInfo";
}

//______________________________________________________________________________
const char *ParameterInfo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::irene::ParameterInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ParameterInfo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::irene::ParameterInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ParameterInfo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::irene::ParameterInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ParameterInfo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::irene::ParameterInfo*)0x0)->GetClass();
   return fgIsA;
}

} // namespace irene
      namespace irene {
//______________________________________________________________________________
void Track::Streamer(TBuffer &R__b)
{
   // Stream an object of class irene::Track.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(irene::Track::Class(),this);
   } else {
      R__b.WriteClassBuffer(irene::Track::Class(),this);
   }
}

} // namespace irene
//______________________________________________________________________________
      namespace irene {
void Track::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class irene::Track.
      TClass *R__cl = ::irene::Track::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_hits", (void*)&_hits);
      R__insp.InspectMember("vector<std::pair<TLorentzVector,double> >", (void*)&_hits, "_hits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_particle", &_particle);
      R__insp.InspectMember(_particle, "_particle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_detector_name", (void*)&_detector_name);
      R__insp.InspectMember("string", (void*)&_detector_name, "_detector_name.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace irene
namespace ROOT {
   // Wrappers around operator new
   static void *new_irenecLcLTrack(void *p) {
      return  p ? new(p) ::irene::Track : new ::irene::Track;
   }
   static void *newArray_irenecLcLTrack(Long_t nElements, void *p) {
      return p ? new(p) ::irene::Track[nElements] : new ::irene::Track[nElements];
   }
   // Wrapper around operator delete
   static void delete_irenecLcLTrack(void *p) {
      delete ((::irene::Track*)p);
   }
   static void deleteArray_irenecLcLTrack(void *p) {
      delete [] ((::irene::Track*)p);
   }
   static void destruct_irenecLcLTrack(void *p) {
      typedef ::irene::Track current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::irene::Track

      namespace irene {
//______________________________________________________________________________
void Particle::Streamer(TBuffer &R__b)
{
   // Stream an object of class irene::Particle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(irene::Particle::Class(),this);
   } else {
      R__b.WriteClassBuffer(irene::Particle::Class(),this);
   }
}

} // namespace irene
//______________________________________________________________________________
      namespace irene {
void Particle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class irene::Particle.
      TClass *R__cl = ::irene::Particle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_PDGcode", &_PDGcode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_initial_vertex", &_initial_vertex);
      R__insp.InspectMember(_initial_vertex, "_initial_vertex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_decay_vertex", &_decay_vertex);
      R__insp.InspectMember(_decay_vertex, "_decay_vertex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_initial_momentum", &_initial_momentum);
      R__insp.InspectMember(_initial_momentum, "_initial_momentum.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_decay_momentum", &_decay_momentum);
      R__insp.InspectMember(_decay_momentum, "_decay_momentum.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_particleID", &_particleID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_primary", &_primary);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_mother", &_mother);
      R__insp.InspectMember(_mother, "_mother.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tracks", &_tracks);
      R__insp.InspectMember(_tracks, "_tracks.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_daughters", &_daughters);
      R__insp.InspectMember(_daughters, "_daughters.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_mass", &_mass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_charge", &_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_lifetime", &_lifetime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_track_length", &_track_length);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_name", (void*)&_name);
      R__insp.InspectMember("string", (void*)&_name, "_name.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_origin_volume", (void*)&_origin_volume);
      R__insp.InspectMember("string", (void*)&_origin_volume, "_origin_volume.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_decay_volume", (void*)&_decay_volume);
      R__insp.InspectMember("string", (void*)&_decay_volume, "_decay_volume.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_creator_process", (void*)&_creator_process);
      R__insp.InspectMember("string", (void*)&_creator_process, "_creator_process.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_properties", (void*)&_properties);
      R__insp.InspectMember("map<std::string,double>", (void*)&_properties, "_properties.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace irene
namespace ROOT {
   // Wrappers around operator new
   static void *new_irenecLcLParticle(void *p) {
      return  p ? new(p) ::irene::Particle : new ::irene::Particle;
   }
   static void *newArray_irenecLcLParticle(Long_t nElements, void *p) {
      return p ? new(p) ::irene::Particle[nElements] : new ::irene::Particle[nElements];
   }
   // Wrapper around operator delete
   static void delete_irenecLcLParticle(void *p) {
      delete ((::irene::Particle*)p);
   }
   static void deleteArray_irenecLcLParticle(void *p) {
      delete [] ((::irene::Particle*)p);
   }
   static void destruct_irenecLcLParticle(void *p) {
      typedef ::irene::Particle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::irene::Particle

      namespace irene {
//______________________________________________________________________________
void SensorHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class irene::SensorHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(irene::SensorHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(irene::SensorHit::Class(),this);
   }
}

} // namespace irene
//______________________________________________________________________________
      namespace irene {
void SensorHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class irene::SensorHit.
      TClass *R__cl = ::irene::SensorHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_waveform", (void*)&_waveform);
      R__insp.InspectMember("vector<std::pair<double,int> >", (void*)&_waveform, "_waveform.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_amplitude", &_amplitude);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_id", &_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_bin_width", &_bin_width);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_detector_name", (void*)&_detector_name);
      R__insp.InspectMember("string", (void*)&_detector_name, "_detector_name.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_position", &_position);
      R__insp.InspectMember(_position, "_position.");
      TObject::ShowMembers(R__insp);
}

} // namespace irene
namespace ROOT {
   // Wrappers around operator new
   static void *new_irenecLcLSensorHit(void *p) {
      return  p ? new(p) ::irene::SensorHit : new ::irene::SensorHit;
   }
   static void *newArray_irenecLcLSensorHit(Long_t nElements, void *p) {
      return p ? new(p) ::irene::SensorHit[nElements] : new ::irene::SensorHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_irenecLcLSensorHit(void *p) {
      delete ((::irene::SensorHit*)p);
   }
   static void deleteArray_irenecLcLSensorHit(void *p) {
      delete [] ((::irene::SensorHit*)p);
   }
   static void destruct_irenecLcLSensorHit(void *p) {
      typedef ::irene::SensorHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::irene::SensorHit

      namespace irene {
//______________________________________________________________________________
void Event::Streamer(TBuffer &R__b)
{
   // Stream an object of class irene::Event.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(irene::Event::Class(),this);
   } else {
      R__b.WriteClassBuffer(irene::Event::Class(),this);
   }
}

} // namespace irene
//______________________________________________________________________________
      namespace irene {
void Event::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class irene::Event.
      TClass *R__cl = ::irene::Event::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_sensor_hits", &_sensor_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_tracks", &_tracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_particles", &_particles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_eventID", &_eventID);
      TObject::ShowMembers(R__insp);
}

} // namespace irene
namespace ROOT {
   // Wrappers around operator new
   static void *new_irenecLcLEvent(void *p) {
      return  p ? new(p) ::irene::Event : new ::irene::Event;
   }
   static void *newArray_irenecLcLEvent(Long_t nElements, void *p) {
      return p ? new(p) ::irene::Event[nElements] : new ::irene::Event[nElements];
   }
   // Wrapper around operator delete
   static void delete_irenecLcLEvent(void *p) {
      delete ((::irene::Event*)p);
   }
   static void deleteArray_irenecLcLEvent(void *p) {
      delete [] ((::irene::Event*)p);
   }
   static void destruct_irenecLcLEvent(void *p) {
      typedef ::irene::Event current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::irene::Event

      namespace irene {
//______________________________________________________________________________
void ParameterInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class irene::ParameterInfo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(irene::ParameterInfo::Class(),this);
   } else {
      R__b.WriteClassBuffer(irene::ParameterInfo::Class(),this);
   }
}

} // namespace irene
//______________________________________________________________________________
      namespace irene {
void ParameterInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class irene::ParameterInfo.
      TClass *R__cl = ::irene::ParameterInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_content", (void*)&_content);
      R__insp.InspectMember("string", (void*)&_content, "_content.", false);
      TNamed::ShowMembers(R__insp);
}

} // namespace irene
namespace ROOT {
   // Wrappers around operator new
   static void *new_irenecLcLParameterInfo(void *p) {
      return  p ? new(p) ::irene::ParameterInfo : new ::irene::ParameterInfo;
   }
   static void *newArray_irenecLcLParameterInfo(Long_t nElements, void *p) {
      return p ? new(p) ::irene::ParameterInfo[nElements] : new ::irene::ParameterInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_irenecLcLParameterInfo(void *p) {
      delete ((::irene::ParameterInfo*)p);
   }
   static void deleteArray_irenecLcLParameterInfo(void *p) {
      delete [] ((::irene::ParameterInfo*)p);
   }
   static void destruct_irenecLcLParameterInfo(void *p) {
      typedef ::irene::ParameterInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::irene::ParameterInfo

//______________________________________________________________________________
namespace ROOT {
   void pairlETLorentzVectorcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pair<TLorentzVector,double>.
      typedef ::ROOT::Shadow::pairlETLorentzVectorcOdoublegR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const pair<TLorentzVector,double>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "first", &sobj->first);
      R__insp.InspectMember(sobj->first, "first.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "second", &sobj->second);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_pairlETLorentzVectorcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<TLorentzVector,double> : new pair<TLorentzVector,double>;
   }
   static void *newArray_pairlETLorentzVectorcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<TLorentzVector,double>[nElements] : new pair<TLorentzVector,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlETLorentzVectorcOdoublegR(void *p) {
      delete ((pair<TLorentzVector,double>*)p);
   }
   static void deleteArray_pairlETLorentzVectorcOdoublegR(void *p) {
      delete [] ((pair<TLorentzVector,double>*)p);
   }
   static void destruct_pairlETLorentzVectorcOdoublegR(void *p) {
      typedef pair<TLorentzVector,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<TLorentzVector,double>

namespace ROOT {
   void maplEstringcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOdoublegR_Dictionary();
   static void *new_maplEstringcOdoublegR(void *p = 0);
   static void *newArray_maplEstringcOdoublegR(Long_t size, void *p);
   static void delete_maplEstringcOdoublegR(void *p);
   static void deleteArray_maplEstringcOdoublegR(void *p);
   static void destruct_maplEstringcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,double>*)
   {
      map<string,double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,double>", -2, "map.dll", 0,
                  typeid(map<string,double>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,double>) );
      instance.SetNew(&new_maplEstringcOdoublegR);
      instance.SetNewArray(&newArray_maplEstringcOdoublegR);
      instance.SetDelete(&delete_maplEstringcOdoublegR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOdoublegR);
      instance.SetDestructor(&destruct_maplEstringcOdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,double> : new map<string,double>;
   }
   static void *newArray_maplEstringcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,double>[nElements] : new map<string,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOdoublegR(void *p) {
      delete ((map<string,double>*)p);
   }
   static void deleteArray_maplEstringcOdoublegR(void *p) {
      delete [] ((map<string,double>*)p);
   }
   static void destruct_maplEstringcOdoublegR(void *p) {
      typedef map<string,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,double>

namespace ROOT {
   void vectorlEpairlETLorentzVectorcOdoublegRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEpairlETLorentzVectorcOdoublegRsPgR_Dictionary();
   static void *new_vectorlEpairlETLorentzVectorcOdoublegRsPgR(void *p = 0);
   static void *newArray_vectorlEpairlETLorentzVectorcOdoublegRsPgR(Long_t size, void *p);
   static void delete_vectorlEpairlETLorentzVectorcOdoublegRsPgR(void *p);
   static void deleteArray_vectorlEpairlETLorentzVectorcOdoublegRsPgR(void *p);
   static void destruct_vectorlEpairlETLorentzVectorcOdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<pair<TLorentzVector,double> >*)
   {
      vector<pair<TLorentzVector,double> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<pair<TLorentzVector,double> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<pair<TLorentzVector,double> >", -2, "/Applications/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<pair<TLorentzVector,double> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEpairlETLorentzVectorcOdoublegRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<pair<TLorentzVector,double> >) );
      instance.SetNew(&new_vectorlEpairlETLorentzVectorcOdoublegRsPgR);
      instance.SetNewArray(&newArray_vectorlEpairlETLorentzVectorcOdoublegRsPgR);
      instance.SetDelete(&delete_vectorlEpairlETLorentzVectorcOdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEpairlETLorentzVectorcOdoublegRsPgR);
      instance.SetDestructor(&destruct_vectorlEpairlETLorentzVectorcOdoublegRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<pair<TLorentzVector,double> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<pair<TLorentzVector,double> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEpairlETLorentzVectorcOdoublegRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<pair<TLorentzVector,double> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEpairlETLorentzVectorcOdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<TLorentzVector,double> > : new vector<pair<TLorentzVector,double> >;
   }
   static void *newArray_vectorlEpairlETLorentzVectorcOdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<TLorentzVector,double> >[nElements] : new vector<pair<TLorentzVector,double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEpairlETLorentzVectorcOdoublegRsPgR(void *p) {
      delete ((vector<pair<TLorentzVector,double> >*)p);
   }
   static void deleteArray_vectorlEpairlETLorentzVectorcOdoublegRsPgR(void *p) {
      delete [] ((vector<pair<TLorentzVector,double> >*)p);
   }
   static void destruct_vectorlEpairlETLorentzVectorcOdoublegRsPgR(void *p) {
      typedef vector<pair<TLorentzVector,double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<pair<TLorentzVector,double> >

namespace ROOT {
   void vectorlEpairlEdoublecOintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEpairlEdoublecOintgRsPgR_Dictionary();
   static void *new_vectorlEpairlEdoublecOintgRsPgR(void *p = 0);
   static void *newArray_vectorlEpairlEdoublecOintgRsPgR(Long_t size, void *p);
   static void delete_vectorlEpairlEdoublecOintgRsPgR(void *p);
   static void deleteArray_vectorlEpairlEdoublecOintgRsPgR(void *p);
   static void destruct_vectorlEpairlEdoublecOintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<pair<double,int> >*)
   {
      vector<pair<double,int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<pair<double,int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<pair<double,int> >", -2, "/Applications/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<pair<double,int> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEpairlEdoublecOintgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<pair<double,int> >) );
      instance.SetNew(&new_vectorlEpairlEdoublecOintgRsPgR);
      instance.SetNewArray(&newArray_vectorlEpairlEdoublecOintgRsPgR);
      instance.SetDelete(&delete_vectorlEpairlEdoublecOintgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEpairlEdoublecOintgRsPgR);
      instance.SetDestructor(&destruct_vectorlEpairlEdoublecOintgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<pair<double,int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<pair<double,int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEpairlEdoublecOintgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<pair<double,int> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEpairlEdoublecOintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<double,int> > : new vector<pair<double,int> >;
   }
   static void *newArray_vectorlEpairlEdoublecOintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<double,int> >[nElements] : new vector<pair<double,int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEpairlEdoublecOintgRsPgR(void *p) {
      delete ((vector<pair<double,int> >*)p);
   }
   static void deleteArray_vectorlEpairlEdoublecOintgRsPgR(void *p) {
      delete [] ((vector<pair<double,int> >*)p);
   }
   static void destruct_vectorlEpairlEdoublecOintgRsPgR(void *p) {
      typedef vector<pair<double,int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<pair<double,int> >

/********************************************************
* ireneDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableireneDict();

extern "C" void G__set_cpp_environmentireneDict() {
  G__cpp_reset_tagtableireneDict();
}
#include <new>
extern "C" int G__cpp_dllrevireneDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* irene */

/* irene::SensorHit */
static int G__ireneDict_191_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   irene::SensorHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new irene::SensorHit[n];
     } else {
       p = new((void*) gvp) irene::SensorHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new irene::SensorHit;
     } else {
       p = new((void*) gvp) irene::SensorHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ireneDictLN_irenecLcLSensorHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_191_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   irene::SensorHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new irene::SensorHit(*((string*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) irene::SensorHit(*((string*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ireneDictLN_irenecLcLSensorHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_191_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::SensorHit*) G__getstructoffset())->SetSample((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_191_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::pair<double,int> >& obj = ((const irene::SensorHit*) G__getstructoffset())->GetWaveform();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_191_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::SensorHit*) G__getstructoffset())->SetAmplitude((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_191_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const irene::SensorHit*) G__getstructoffset())->GetAmplitude());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_191_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::SensorHit*) G__getstructoffset())->SetID((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_191_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const irene::SensorHit*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_191_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::SensorHit*) G__getstructoffset())->SetBinWidth((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_191_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const irene::SensorHit*) G__getstructoffset())->GetBinWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_191_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::SensorHit*) G__getstructoffset())->SetPosition((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_191_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const irene::SensorHit*) G__getstructoffset())->GetPosition();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_191_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::SensorHit*) G__getstructoffset())->SetDetectorName(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_191_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const irene::SensorHit*) G__getstructoffset())->GetDetectorName();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_191_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const irene::SensorHit*) G__getstructoffset())->Info(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_191_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) irene::SensorHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_191_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) irene::SensorHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_191_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) irene::SensorHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_191_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      irene::SensorHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_191_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::SensorHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_191_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) irene::SensorHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_191_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) irene::SensorHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_191_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) irene::SensorHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_191_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) irene::SensorHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ireneDict_191_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   irene::SensorHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new irene::SensorHit(*(irene::SensorHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ireneDictLN_irenecLcLSensorHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef irene::SensorHit G__TirenecLcLSensorHit;
static int G__ireneDict_191_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (irene::SensorHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((irene::SensorHit*) (soff+(sizeof(irene::SensorHit)*i)))->~G__TirenecLcLSensorHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (irene::SensorHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((irene::SensorHit*) (soff))->~G__TirenecLcLSensorHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ireneDict_191_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   irene::SensorHit* dest = (irene::SensorHit*) G__getstructoffset();
   *dest = *(irene::SensorHit*) libp->para[0].ref;
   const irene::SensorHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* irene::Track */
static int G__ireneDict_192_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   irene::Track* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new irene::Track[n];
     } else {
       p = new((void*) gvp) irene::Track[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new irene::Track;
     } else {
       p = new((void*) gvp) irene::Track;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ireneDictLN_irenecLcLTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_192_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   irene::Track* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new irene::Track(*(string*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) irene::Track(*(string*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ireneDictLN_irenecLcLTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_192_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::Track*) G__getstructoffset())->AddHit((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_192_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::pair<TLorentzVector,double> >& obj = ((const irene::Track*) G__getstructoffset())->GetHits();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_192_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::pair<TLorentzVector,double> >& obj = ((irene::Track*) G__getstructoffset())->GetHits();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_192_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::Track*) G__getstructoffset())->SetParticle((irene::Particle*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_192_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const irene::Track*) G__getstructoffset())->GetParticle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_192_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((irene::Track*) G__getstructoffset())->GetParticle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_192_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::Track*) G__getstructoffset())->SetDetector(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_192_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const irene::Track*) G__getstructoffset())->GetDetectorName();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_192_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const irene::Track*) G__getstructoffset())->IInfo(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_192_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) irene::Track::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_192_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) irene::Track::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_192_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) irene::Track::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_192_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      irene::Track::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_192_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::Track*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_192_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) irene::Track::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_192_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) irene::Track::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_192_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) irene::Track::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_192_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) irene::Track::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ireneDict_192_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   irene::Track* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new irene::Track(*(irene::Track*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ireneDictLN_irenecLcLTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef irene::Track G__TirenecLcLTrack;
static int G__ireneDict_192_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (irene::Track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((irene::Track*) (soff+(sizeof(irene::Track)*i)))->~G__TirenecLcLTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (irene::Track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((irene::Track*) (soff))->~G__TirenecLcLTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ireneDict_192_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   irene::Track* dest = (irene::Track*) G__getstructoffset();
   *dest = *(irene::Track*) libp->para[0].ref;
   const irene::Track& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* irene::Particle */
static int G__ireneDict_193_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   irene::Particle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new irene::Particle[n];
     } else {
       p = new((void*) gvp) irene::Particle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new irene::Particle;
     } else {
       p = new((void*) gvp) irene::Particle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ireneDictLN_irenecLcLParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   irene::Particle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new irene::Particle(*((string*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) irene::Particle(*((string*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ireneDictLN_irenecLcLParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   irene::Particle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new irene::Particle((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) irene::Particle((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ireneDictLN_irenecLcLParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::Particle*) G__getstructoffset())->SetPDGcode((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const irene::Particle*) G__getstructoffset())->GetPDGcode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::Particle*) G__getstructoffset())->SetInitialVertex((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const irene::Particle*) G__getstructoffset())->GetInitialVertex();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::Particle*) G__getstructoffset())->SetDecayVertex((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const irene::Particle*) G__getstructoffset())->GetDecayVertex();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::Particle*) G__getstructoffset())->SetInitialMomentum((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const irene::Particle*) G__getstructoffset())->GetInitialMomentum();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::Particle*) G__getstructoffset())->SetDecayMomentum((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const irene::Particle*) G__getstructoffset())->GetDecayMomentum();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::Particle*) G__getstructoffset())->SetParticleID((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const irene::Particle*) G__getstructoffset())->GetParticleID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::Particle*) G__getstructoffset())->SetTrackLength((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const irene::Particle*) G__getstructoffset())->GetTrackLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::Particle*) G__getstructoffset())->SetPrimary((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((irene::Particle*) G__getstructoffset())->IsPrimary());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const irene::Particle*) G__getstructoffset())->IsPrimary());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::Particle*) G__getstructoffset())->SetMother((irene::Particle*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const irene::Particle*) G__getstructoffset())->GetMother());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((irene::Particle*) G__getstructoffset())->GetMother());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::Particle*) G__getstructoffset())->AddTrack((irene::Track*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRefArray* pobj;
         const TRefArray xobj = ((const irene::Particle*) G__getstructoffset())->GetTracks();
         pobj = new TRefArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRefArray& obj = ((irene::Particle*) G__getstructoffset())->GetTracks();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((irene::Particle*) G__getstructoffset())->GetTrack(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::Particle*) G__getstructoffset())->AddDaughter((irene::Particle*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRefArray* pobj;
         const TRefArray xobj = ((const irene::Particle*) G__getstructoffset())->GetDaughters();
         pobj = new TRefArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRefArray& obj = ((irene::Particle*) G__getstructoffset())->GetDaughters();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::Particle*) G__getstructoffset())->SetParameters((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::Particle*) G__getstructoffset())->SetParticleName(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::Particle*) G__getstructoffset())->SetName((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const irene::Particle*) G__getstructoffset())->Name();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::Particle*) G__getstructoffset())->SetInitialVolume(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const irene::Particle*) G__getstructoffset())->GetInitialVolume();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::Particle*) G__getstructoffset())->SetDecayVolume(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const irene::Particle*) G__getstructoffset())->GetDecayVolume();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::Particle*) G__getstructoffset())->SetCreatorProcess(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const irene::Particle*) G__getstructoffset())->GetCreatorProcess();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::Particle*) G__getstructoffset())->AddProperty(*(string*) libp->para[0].ref, (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((irene::Particle*) G__getstructoffset())->FindProperty(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const irene::Particle*) G__getstructoffset())->GetMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const irene::Particle*) G__getstructoffset())->GetCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const irene::Particle*) G__getstructoffset())->Energy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const irene::Particle*) G__getstructoffset())->Momentum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const irene::Particle*) G__getstructoffset())->IInfo(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) irene::Particle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) irene::Particle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) irene::Particle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      irene::Particle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::Particle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) irene::Particle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) irene::Particle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) irene::Particle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_193_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) irene::Particle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef irene::Particle G__TirenecLcLParticle;
static int G__ireneDict_193_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (irene::Particle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((irene::Particle*) (soff+(sizeof(irene::Particle)*i)))->~G__TirenecLcLParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (irene::Particle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((irene::Particle*) (soff))->~G__TirenecLcLParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* irene::Event */
static int G__ireneDict_195_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   irene::Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new irene::Event[n];
     } else {
       p = new((void*) gvp) irene::Event[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new irene::Event;
     } else {
       p = new((void*) gvp) irene::Event;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ireneDictLN_irenecLcLEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_195_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   irene::Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new irene::Event((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) irene::Event((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ireneDictLN_irenecLcLEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_195_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   irene::Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new irene::Event(*(irene::Event*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) irene::Event(*(irene::Event*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ireneDictLN_irenecLcLEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_195_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const irene::Event& obj = ((irene::Event*) G__getstructoffset())->operator=(*(irene::Event*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_195_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::Event*) G__getstructoffset())->AddSensorHit((irene::SensorHit*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_195_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const irene::Event*) G__getstructoffset())->GetSensorHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_195_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::Event*) G__getstructoffset())->AddTrack((irene::Track*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_195_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const irene::Event*) G__getstructoffset())->GetTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_195_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<const irene::Track*>* pobj;
         const vector<const irene::Track*> xobj = ((const irene::Event*) G__getstructoffset())->Tracks();
         pobj = new vector<const irene::Track*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_195_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<const irene::Track*>* pobj;
         const vector<const irene::Track*> xobj = ((const irene::Event*) G__getstructoffset())->Tracks(*((string*) G__int(libp->para[0])));
         pobj = new vector<const irene::Track*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_195_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::Event*) G__getstructoffset())->AddParticle((irene::Particle*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_195_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const irene::Event*) G__getstructoffset())->GetParticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_195_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((irene::Event*) G__getstructoffset())->GetParticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_195_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<const irene::Particle*>* pobj;
         const vector<const irene::Particle*> xobj = ((const irene::Event*) G__getstructoffset())->Particles();
         pobj = new vector<const irene::Particle*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_195_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::Event*) G__getstructoffset())->SetID((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_195_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const irene::Event*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_195_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const irene::Event*) G__getstructoffset())->FillHitVector(*(vector<std::pair<TLorentzVector,double> >*) libp->para[0].ref, *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_195_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::pair<TLorentzVector,double> >* pobj;
         const vector<std::pair<TLorentzVector,double> > xobj = ((const irene::Event*) G__getstructoffset())->FillHitVector(*((string*) G__int(libp->para[0])));
         pobj = new vector<std::pair<TLorentzVector,double> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_195_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::Event*) G__getstructoffset())->IClear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_195_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const irene::Event*) G__getstructoffset())->IInfo(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_195_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) irene::Event::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_195_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) irene::Event::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_195_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) irene::Event::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_195_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      irene::Event::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_195_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::Event*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_195_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) irene::Event::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_195_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) irene::Event::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_195_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) irene::Event::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_195_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) irene::Event::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef irene::Event G__TirenecLcLEvent;
static int G__ireneDict_195_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (irene::Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((irene::Event*) (soff+(sizeof(irene::Event)*i)))->~G__TirenecLcLEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (irene::Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((irene::Event*) (soff))->~G__TirenecLcLEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<TLorentzVector,double> */
static int G__ireneDict_204_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<TLorentzVector,double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<TLorentzVector,double>[n];
     } else {
       p = new((void*) gvp) pair<TLorentzVector,double>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<TLorentzVector,double>;
     } else {
       p = new((void*) gvp) pair<TLorentzVector,double>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ireneDictLN_pairlETLorentzVectorcOdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_204_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<TLorentzVector,double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new pair<TLorentzVector,double>(*(TLorentzVector*) libp->para[0].ref, *(double*) G__Doubleref(&libp->para[1]));
   } else {
     p = new((void*) gvp) pair<TLorentzVector,double>(*(TLorentzVector*) libp->para[0].ref, *(double*) G__Doubleref(&libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ireneDictLN_pairlETLorentzVectorcOdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ireneDict_204_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pair<TLorentzVector,double>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pair<TLorentzVector,double>(*(pair<TLorentzVector,double>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ireneDictLN_pairlETLorentzVectorcOdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<TLorentzVector,double> G__TpairlETLorentzVectorcOdoublegR;
static int G__ireneDict_204_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pair<TLorentzVector,double>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pair<TLorentzVector,double>*) (soff+(sizeof(pair<TLorentzVector,double>)*i)))->~G__TpairlETLorentzVectorcOdoublegR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pair<TLorentzVector,double>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pair<TLorentzVector,double>*) (soff))->~G__TpairlETLorentzVectorcOdoublegR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > > */
static int G__ireneDict_206_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::reference obj = ((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) G__getstructoffset())->at((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::const_reference obj = ((const vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) G__getstructoffset())->at((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::iterator* pobj;
         vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::iterator xobj = ((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) G__getstructoffset())->begin();
         pobj = new vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::iterator* pobj;
         vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::iterator xobj = ((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) G__getstructoffset())->end();
         pobj = new vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::reverse_iterator* pobj;
         vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::reverse_iterator xobj = ((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) G__getstructoffset())->rbegin();
         pobj = new vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::reverse_iterator* pobj;
         vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::reverse_iterator xobj = ((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) G__getstructoffset())->rend();
         pobj = new vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) G__getstructoffset())->resize((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) G__getstructoffset())->resize((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::size_type) G__int(libp->para[0]), *((pair<TLorentzVector,double>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::reference obj = ((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) G__getstructoffset())->operator[]((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::const_reference obj = ((const vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) G__getstructoffset())->operator[]((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >[n];
     } else {
       p = new((void*) gvp) vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >;
     } else {
       p = new((void*) gvp) vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::size_type) G__int(libp->para[0]), *(pair<TLorentzVector,double>*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::size_type) G__int(libp->para[0]), *(pair<TLorentzVector,double>*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >(*(vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >(*(vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >(*((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::const_iterator*) G__int(libp->para[0])), *((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >(*((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::const_iterator*) G__int(libp->para[0])), *((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >& obj = ((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) G__getstructoffset())->operator=(*(vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) G__getstructoffset())->reserve((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<TLorentzVector,double>& obj = ((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<TLorentzVector,double>& obj = ((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) G__getstructoffset())->push_back(*(pair<TLorentzVector,double>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) G__getstructoffset())->swap(*(vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::iterator* pobj;
         vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::iterator xobj = ((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) G__getstructoffset())->insert(*((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::iterator*) G__int(libp->para[0])), *(pair<TLorentzVector,double>*) libp->para[1].ref);
         pobj = new vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) G__getstructoffset())->insert(*((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::iterator*) G__int(libp->para[0])), *((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::const_iterator*) G__int(libp->para[1]))
, *((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) G__getstructoffset())->insert(*((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::iterator*) G__int(libp->para[0])), (vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::size_type) G__int(libp->para[1])
, *(pair<TLorentzVector,double>*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) G__getstructoffset())->erase(*((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) G__getstructoffset())->erase(*((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::iterator*) G__int(libp->para[0])), *((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_206_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > > G__TvectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR;
static int G__ireneDict_206_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) (soff+(sizeof(vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >)*i)))->~G__TvectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*) (soff))->~G__TvectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* irene::ParameterInfo */
static int G__ireneDict_209_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   irene::ParameterInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new irene::ParameterInfo[n];
     } else {
       p = new((void*) gvp) irene::ParameterInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new irene::ParameterInfo;
     } else {
       p = new((void*) gvp) irene::ParameterInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ireneDictLN_irenecLcLParameterInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_209_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   irene::ParameterInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new irene::ParameterInfo((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) irene::ParameterInfo((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ireneDictLN_irenecLcLParameterInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_209_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::ParameterInfo*) G__getstructoffset())->SetContent(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_209_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const irene::ParameterInfo*) G__getstructoffset())->GetContent();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_209_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) irene::ParameterInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_209_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) irene::ParameterInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_209_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) irene::ParameterInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_209_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      irene::ParameterInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_209_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((irene::ParameterInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_209_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) irene::ParameterInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_209_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) irene::ParameterInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_209_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) irene::ParameterInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ireneDict_209_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) irene::ParameterInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ireneDict_209_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   irene::ParameterInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new irene::ParameterInfo(*(irene::ParameterInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ireneDictLN_irenecLcLParameterInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef irene::ParameterInfo G__TirenecLcLParameterInfo;
static int G__ireneDict_209_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (irene::ParameterInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((irene::ParameterInfo*) (soff+(sizeof(irene::ParameterInfo)*i)))->~G__TirenecLcLParameterInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (irene::ParameterInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((irene::ParameterInfo*) (soff))->~G__TirenecLcLParameterInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ireneDict_209_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   irene::ParameterInfo* dest = (irene::ParameterInfo*) G__getstructoffset();
   *dest = *(irene::ParameterInfo*) libp->para[0].ref;
   const irene::ParameterInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* irene */

/* irene::SensorHit */

/* irene::Track */

/* irene::Particle */

/* irene::Event */

/* pair<TLorentzVector,double> */

/* vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > > */

/* irene::ParameterInfo */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncireneDict {
 public:
  G__Sizep2memfuncireneDict(): p(&G__Sizep2memfuncireneDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncireneDict::*p)();
};

size_t G__get_sizep2memfuncireneDict()
{
  G__Sizep2memfuncireneDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceireneDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ireneDictLN_irenecLcLSensorHit))) {
     irene::SensorHit *G__Lderived;
     G__Lderived=(irene::SensorHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ireneDictLN_irenecLcLSensorHit),G__get_linked_tagnum(&G__ireneDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ireneDictLN_irenecLcLTrack))) {
     irene::Track *G__Lderived;
     G__Lderived=(irene::Track*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ireneDictLN_irenecLcLTrack),G__get_linked_tagnum(&G__ireneDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ireneDictLN_irenecLcLParticle))) {
     irene::Particle *G__Lderived;
     G__Lderived=(irene::Particle*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ireneDictLN_irenecLcLParticle),G__get_linked_tagnum(&G__ireneDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ireneDictLN_irenecLcLEvent))) {
     irene::Event *G__Lderived;
     G__Lderived=(irene::Event*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ireneDictLN_irenecLcLEvent),G__get_linked_tagnum(&G__ireneDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ireneDictLN_irenecLcLParameterInfo))) {
     irene::ParameterInfo *G__Lderived;
     G__Lderived=(irene::ParameterInfo*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ireneDictLN_irenecLcLParameterInfo),G__get_linked_tagnum(&G__ireneDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ireneDictLN_irenecLcLParameterInfo),G__get_linked_tagnum(&G__ireneDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableireneDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__ireneDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ireneDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ireneDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ireneDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ireneDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__ireneDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ireneDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ireneDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ireneDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ireneDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ireneDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ireneDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__ireneDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__ireneDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__ireneDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<const irene::Track*>",117,G__get_linked_tagnum(&G__ireneDictLN_vectorlEconstsPirenecLcLTrackmUcOallocatorlEconstsPirenecLcLTrackmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ireneDictLN_reverse_iteratorlEvectorlEconstsPirenecLcLTrackmUcOallocatorlEconstsPirenecLcLTrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ireneDictLN_vectorlEconstsPirenecLcLTrackmUcOallocatorlEconstsPirenecLcLTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ireneDictLN_reverse_iteratorlEvectorlEconstsPirenecLcLTrackmUcOallocatorlEconstsPirenecLcLTrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ireneDictLN_vectorlEconstsPirenecLcLTrackmUcOallocatorlEconstsPirenecLcLTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<const irene::Particle*>",117,G__get_linked_tagnum(&G__ireneDictLN_vectorlEconstsPirenecLcLParticlemUcOallocatorlEconstsPirenecLcLParticlemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ireneDictLN_reverse_iteratorlEvectorlEconstsPirenecLcLParticlemUcOallocatorlEconstsPirenecLcLParticlemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ireneDictLN_vectorlEconstsPirenecLcLParticlemUcOallocatorlEconstsPirenecLcLParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ireneDictLN_reverse_iteratorlEvectorlEconstsPirenecLcLParticlemUcOallocatorlEconstsPirenecLcLParticlemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ireneDictLN_vectorlEconstsPirenecLcLParticlemUcOallocatorlEconstsPirenecLcLParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<TLorentzVector,double> >",117,G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<TLorentzVector,double> >",117,G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__ireneDictLN_pairlETLorentzVectorcOdoublegR),0,G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__ireneDictLN_pairlETLorentzVectorcOdoublegR),0,G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__ireneDictLN_pairlETLorentzVectorcOdoublegR),256,G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__ireneDictLN_pairlETLorentzVectorcOdoublegR),1,G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__ireneDictLN_pairlETLorentzVectorcOdoublegR),257,G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ireneDictLN_reverse_iteratorlEvectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__ireneDictLN_reverse_iteratorlEvectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ireneDictLN_reverse_iteratorlEvectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__ireneDictLN_reverse_iteratorlEvectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<TLorentzVector,double> >",117,G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,double>",117,G__get_linked_tagnum(&G__ireneDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,double>",117,G__get_linked_tagnum(&G__ireneDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__ireneDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__ireneDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__ireneDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__ireneDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<double,int> >",117,G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlEdoublecOintgRcOallocatorlEpairlEdoublecOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<double,int> >",117,G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlEdoublecOintgRcOallocatorlEpairlEdoublecOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ireneDictLN_reverse_iteratorlEvectorlEpairlEdoublecOintgRcOallocatorlEpairlEdoublecOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlEdoublecOintgRcOallocatorlEpairlEdoublecOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ireneDictLN_reverse_iteratorlEvectorlEpairlEdoublecOintgRcOallocatorlEpairlEdoublecOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlEdoublecOintgRcOallocatorlEpairlEdoublecOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<double,int> >",117,G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlEdoublecOintgRcOallocatorlEpairlEdoublecOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Double_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparse<Double_t>",117,G__get_linked_tagnum(&G__ireneDictLN_TMatrixTSparselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* irene */
static void G__setup_memvarirene(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ireneDictLN_irene));
   {
   G__memvar_setup((void*)(&irene::millimeter),100,0,1,-1,-1,-2,1,"millimeter=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::millimeter2),100,0,1,-1,-1,-2,1,"millimeter2=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::millimeter3),100,0,1,-1,-1,-2,1,"millimeter3=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::centimeter),100,0,1,-1,-1,-2,1,"centimeter=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::centimeter2),100,0,1,-1,-1,-2,1,"centimeter2=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::centimeter3),100,0,1,-1,-1,-2,1,"centimeter3=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::decimeter),100,0,1,-1,-1,-2,1,"decimeter=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::decimeter2),100,0,1,-1,-1,-2,1,"decimeter2=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::decimeter3),100,0,1,-1,-1,-2,1,"decimeter3=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::liter),100,0,1,-1,-1,-2,1,"liter=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::l),100,0,1,-1,-1,-2,1,"l=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::meter),100,0,1,-1,-1,-2,1,"meter=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::meter2),100,0,1,-1,-1,-2,1,"meter2=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::meter3),100,0,1,-1,-1,-2,1,"meter3=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::kilometer),100,0,1,-1,-1,-2,1,"kilometer=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::kilometer2),100,0,1,-1,-1,-2,1,"kilometer2=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::kilometer3),100,0,1,-1,-1,-2,1,"kilometer3=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::micrometer),100,0,1,-1,-1,-2,1,"micrometer=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::nanometer),100,0,1,-1,-1,-2,1,"nanometer=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::angstrom),100,0,1,-1,-1,-2,1,"angstrom=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::fermi),100,0,1,-1,-1,-2,1,"fermi=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::barn),100,0,1,-1,-1,-2,1,"barn=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::millibarn),100,0,1,-1,-1,-2,1,"millibarn=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::microbarn),100,0,1,-1,-1,-2,1,"microbarn=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::nanobarn),100,0,1,-1,-1,-2,1,"nanobarn=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::picobarn),100,0,1,-1,-1,-2,1,"picobarn=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::mm),100,0,1,-1,-1,-2,1,"mm=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::mm2),100,0,1,-1,-1,-2,1,"mm2=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::mm3),100,0,1,-1,-1,-2,1,"mm3=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::cm),100,0,1,-1,-1,-2,1,"cm=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::cm2),100,0,1,-1,-1,-2,1,"cm2=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::cm3),100,0,1,-1,-1,-2,1,"cm3=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::m),100,0,1,-1,-1,-2,1,"m=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::m2),100,0,1,-1,-1,-2,1,"m2=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::m3),100,0,1,-1,-1,-2,1,"m3=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::km),100,0,1,-1,-1,-2,1,"km=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::km2),100,0,1,-1,-1,-2,1,"km2=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::km3),100,0,1,-1,-1,-2,1,"km3=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::radian),100,0,1,-1,-1,-2,1,"radian=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::milliradian),100,0,1,-1,-1,-2,1,"milliradian=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::degree),100,0,1,-1,-1,-2,1,"degree=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::steradian),100,0,1,-1,-1,-2,1,"steradian=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::rad),100,0,1,-1,-1,-2,1,"rad=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::mrad),100,0,1,-1,-1,-2,1,"mrad=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::sr),100,0,1,-1,-1,-2,1,"sr=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::deg),100,0,1,-1,-1,-2,1,"deg=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::nanosecond),100,0,1,-1,-1,-2,1,"nanosecond=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::second),100,0,1,-1,-1,-2,1,"second=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::millisecond),100,0,1,-1,-1,-2,1,"millisecond=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::microsecond),100,0,1,-1,-1,-2,1,"microsecond=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::picosecond),100,0,1,-1,-1,-2,1,"picosecond=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::year),100,0,1,-1,-1,-2,1,"year=",0,"new!");
   G__memvar_setup((void*)(&irene::hertz),100,0,1,-1,-1,-2,1,"hertz=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::kilohertz),100,0,1,-1,-1,-2,1,"kilohertz=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::megahertz),100,0,1,-1,-1,-2,1,"megahertz=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::ns),100,0,1,-1,-1,-2,1,"ns=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::s),100,0,1,-1,-1,-2,1,"s=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::ms),100,0,1,-1,-1,-2,1,"ms=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::yr),100,0,1,-1,-1,-2,1,"yr=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::eplus),100,0,1,-1,-1,-2,1,"eplus=",0,"positron charge");
   G__memvar_setup((void*)(&irene::e_SI),100,0,1,-1,-1,-2,1,"e_SI=",0,"positron charge in coulomb");
   G__memvar_setup((void*)(&irene::coulomb),100,0,1,-1,-1,-2,1,"coulomb=",0,"coulomb = 6.24150 e+18 * eplus");
   G__memvar_setup((void*)(&irene::megaelectronvolt),100,0,1,-1,-1,-2,1,"megaelectronvolt=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::electronvolt),100,0,1,-1,-1,-2,1,"electronvolt=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::kiloelectronvolt),100,0,1,-1,-1,-2,1,"kiloelectronvolt=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::gigaelectronvolt),100,0,1,-1,-1,-2,1,"gigaelectronvolt=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::teraelectronvolt),100,0,1,-1,-1,-2,1,"teraelectronvolt=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::petaelectronvolt),100,0,1,-1,-1,-2,1,"petaelectronvolt=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::joule),100,0,1,-1,-1,-2,1,"joule=",0,"joule = 6.24150 e+12 * MeV");
   G__memvar_setup((void*)(&irene::MeV),100,0,1,-1,-1,-2,1,"MeV=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::eV),100,0,1,-1,-1,-2,1,"eV=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::keV),100,0,1,-1,-1,-2,1,"keV=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::GeV),100,0,1,-1,-1,-2,1,"GeV=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::TeV),100,0,1,-1,-1,-2,1,"TeV=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::PeV),100,0,1,-1,-1,-2,1,"PeV=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::kilogram),100,0,1,-1,-1,-2,1,"kilogram=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::gram),100,0,1,-1,-1,-2,1,"gram=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::milligram),100,0,1,-1,-1,-2,1,"milligram=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::ton),100,0,1,-1,-1,-2,1,"ton=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::kiloton),100,0,1,-1,-1,-2,1,"kiloton=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::kg),100,0,1,-1,-1,-2,1,"kg=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::g),100,0,1,-1,-1,-2,1,"g=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::mg),100,0,1,-1,-1,-2,1,"mg=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::pascal),100,0,1,-1,-1,-2,1,"pascal=",0,"pascal = 6.24150 e+3 * MeV/mm3");
   G__memvar_setup((void*)(&irene::bar),100,0,1,-1,-1,-2,1,"bar=",0,"bar    = 6.24150 e+8 * MeV/mm3");
   G__memvar_setup((void*)(&irene::atmosphere),100,0,1,-1,-1,-2,1,"atmosphere=",0,"atm    = 6.32420 e+8 * MeV/mm3");
   G__memvar_setup((void*)(&irene::megavolt),100,0,1,-1,-1,-2,1,"megavolt=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::kilovolt),100,0,1,-1,-1,-2,1,"kilovolt=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::volt),100,0,1,-1,-1,-2,1,"volt=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::kelvin),100,0,1,-1,-1,-2,1,"kelvin=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::becquerel),100,0,1,-1,-1,-2,1,"becquerel=",0,(char*)NULL);
   G__memvar_setup((void*)(&irene::curie),100,0,1,-1,-1,-2,1,"curie=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* irene::SensorHit */
static void G__setup_memvarirenecLcLSensorHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ireneDictLN_irenecLcLSensorHit));
   { irene::SensorHit *p; p=(irene::SensorHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlEdoublecOintgRcOallocatorlEpairlEdoublecOintgRsPgRsPgR),G__defined_typename("vector<std::pair<double,int> >"),-1,4,"_waveform=",0,"/< times and counts of the sensor's response  ");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_amplitude=",0,"/< total counts summed over all the times");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_id=",0,"/< unique identification number ");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_bin_width=",0,"/< width of the time bins");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ireneDictLN_string),-1,-1,4,"_detector_name=",0,"/< type of sensor");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ireneDictLN_TVector3),-1,-1,4,"_position=",0,"/< position of the sensor");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ireneDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* irene::Track */
static void G__setup_memvarirenecLcLTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ireneDictLN_irenecLcLTrack));
   { irene::Track *p; p=(irene::Track*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR),G__defined_typename("vector<std::pair<TLorentzVector,double> >"),-1,4,"_hits=",0,"/< true hits in the track. The TLorentzVector is the position and the time of the hit, and the double is the energy");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ireneDictLN_TRef),-1,-1,4,"_particle=",0,"/< reference to the particle the track is created by");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ireneDictLN_string),-1,-1,4,"_detector_name=",0,"/< detector where hits have been produced");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ireneDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* irene::Particle */
static void G__setup_memvarirenecLcLParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ireneDictLN_irenecLcLParticle));
   { irene::Particle *p; p=(irene::Particle*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_PDGcode=",0,"/< PDG code of the particle");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ireneDictLN_TLorentzVector),-1,-1,4,"_initial_vertex=",0,"/< point and time of generation");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ireneDictLN_TLorentzVector),-1,-1,4,"_decay_vertex=",0,"/< point and time of death");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ireneDictLN_TLorentzVector),-1,-1,4,"_initial_momentum=",0,"/< initial momentum and energy");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ireneDictLN_TLorentzVector),-1,-1,4,"_decay_momentum=",0,"/< final momentum and energy");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_particleID=",0,"/< identification number coming from the Geant4 simulation");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"_primary=",0,"/< true if the particle is the one directly generated in Geant4");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ireneDictLN_TRef),-1,-1,4,"_mother=",0,"/< reference to the mother particle");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ireneDictLN_TRefArray),-1,-1,4,"_tracks=",0,"/< reference to the tracks that contains the true hits of the particle");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ireneDictLN_TRefArray),-1,-1,4,"_daughters=",0,"/< array of references to the secondary particles");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_mass=",0,"/< mass. It cannot be set, it is given through the name or the PDG code.");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_charge=",0,"/< charge. It cannot be set, it is given through the name or the PDG code.");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_lifetime=",0,"/< life time. It cannot be set, it is given through the name or the PDG code.");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_track_length=",0,"/< length of the associated track");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ireneDictLN_string),-1,-1,4,"_name=",0,"/< name");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ireneDictLN_string),-1,-1,4,"_origin_volume=",0,"/< name of the volume where the particle is created");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ireneDictLN_string),-1,-1,4,"_decay_volume=",0,"/< name of the volume where the particle dies");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ireneDictLN_string),-1,-1,4,"_creator_process=",0,"/< name of the process that creates the particle");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ireneDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),G__defined_typename("map<std::string,double>"),-1,4,"_properties=",0,"/< map of useful properties for ionization clusters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ireneDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* irene::Event */
static void G__setup_memvarirenecLcLEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ireneDictLN_irenecLcLEvent));
   { irene::Event *p; p=(irene::Event*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ireneDictLN_TObjArray),-1,-1,4,"_sensor_hits=",0,"/< sensor response");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ireneDictLN_TObjArray),-1,-1,4,"_tracks=",0,"/< true hits of particles");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ireneDictLN_TObjArray),-1,-1,4,"_particles=",0,"/< particles");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_eventID=",0,"/< unique identificative number");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ireneDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<TLorentzVector,double> */
static void G__setup_memvarpairlETLorentzVectorcOdoublegR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ireneDictLN_pairlETLorentzVectorcOdoublegR));
   { pair<TLorentzVector,double> *p; p=(pair<TLorentzVector,double>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ireneDictLN_TLorentzVector),-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),100,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > > */
static void G__setup_memvarvectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR));
   { vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > > *p; p=(vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* irene::ParameterInfo */
static void G__setup_memvarirenecLcLParameterInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ireneDictLN_irenecLcLParameterInfo));
   { irene::ParameterInfo *p; p=(irene::ParameterInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ireneDictLN_string),-1,-1,4,"_content=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ireneDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarireneDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncirene(void) {
   /* irene */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ireneDictLN_irene));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncirenecLcLSensorHit(void) {
   /* irene::SensorHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ireneDictLN_irenecLcLSensorHit));
   G__memfunc_setup("SensorHit",927,G__ireneDict_191_0_1, 105, G__get_linked_tagnum(&G__ireneDictLN_irenecLcLSensorHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SensorHit",927,G__ireneDict_191_0_2, 105, G__get_linked_tagnum(&G__ireneDictLN_irenecLcLSensorHit), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - det_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSample",910,G__ireneDict_191_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - amp d - - 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWaveform",1127,G__ireneDict_191_0_4, 117, G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlEdoublecOintgRcOallocatorlEpairlEdoublecOintgRsPgRsPgR), G__defined_typename("vector<std::pair<double,int> >"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAmplitude",1233,G__ireneDict_191_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - amplitude", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAmplitude",1221,G__ireneDict_191_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetID",441,G__ireneDict_191_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__ireneDict_191_0_8, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBinWidth",1093,G__ireneDict_191_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBinWidth",1081,G__ireneDict_191_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPosition",1153,G__ireneDict_191_0_11, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - x d - - 0 - y "
"d - - 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosition",1141,G__ireneDict_191_0_12, 117, G__get_linked_tagnum(&G__ireneDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetectorName",1511,G__ireneDict_191_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - det_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorName",1499,G__ireneDict_191_0_14, 117, G__get_linked_tagnum(&G__ireneDictLN_string), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Info",396,G__ireneDict_191_0_15, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ireneDict_191_0_16, 85, G__get_linked_tagnum(&G__ireneDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&irene::SensorHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ireneDict_191_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&irene::SensorHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ireneDict_191_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&irene::SensorHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ireneDict_191_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&irene::SensorHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ireneDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ireneDict_191_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ireneDict_191_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&irene::SensorHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ireneDict_191_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&irene::SensorHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ireneDict_191_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&irene::SensorHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ireneDict_191_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&irene::SensorHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SensorHit", 927, G__ireneDict_191_0_28, (int) ('i'), G__get_linked_tagnum(&G__ireneDictLN_irenecLcLSensorHit), -1, 0, 1, 1, 1, 0, "u 'irene::SensorHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SensorHit", 1053, G__ireneDict_191_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ireneDict_191_0_30, (int) ('u'), G__get_linked_tagnum(&G__ireneDictLN_irenecLcLSensorHit), -1, 1, 1, 1, 1, 0, "u 'irene::SensorHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncirenecLcLTrack(void) {
   /* irene::Track */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ireneDictLN_irenecLcLTrack));
   G__memfunc_setup("Track",501,G__ireneDict_192_0_1, 105, G__get_linked_tagnum(&G__ireneDictLN_irenecLcLTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Track",501,G__ireneDict_192_0_2, 105, G__get_linked_tagnum(&G__ireneDictLN_irenecLcLTrack), -1, 0, 1, 1, 1, 0, "u 'string' - 1 - detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddHit",558,G__ireneDict_192_0_3, 121, -1, -1, 0, 5, 1, 1, 0, 
"d - - 0 - x d - - 0 - y "
"d - - 0 - z d - - 0 - t "
"d - - 0 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHits",696,G__ireneDict_192_0_4, 117, G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR), G__defined_typename("vector<std::pair<TLorentzVector,double> >"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHits",696,G__ireneDict_192_0_5, 117, G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR), G__defined_typename("vector<std::pair<TLorentzVector,double> >"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParticle",1120,G__ireneDict_192_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'irene::Particle' - 0 - particle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticle",1108,G__ireneDict_192_0_7, 85, G__get_linked_tagnum(&G__ireneDictLN_irenecLcLParticle), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticle",1108,G__ireneDict_192_0_8, 85, G__get_linked_tagnum(&G__ireneDictLN_irenecLcLParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetector",1126,G__ireneDict_192_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorName",1499,G__ireneDict_192_0_10, 117, G__get_linked_tagnum(&G__ireneDictLN_string), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IInfo",469,G__ireneDict_192_0_11, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ireneDict_192_0_12, 85, G__get_linked_tagnum(&G__ireneDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&irene::Track::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ireneDict_192_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&irene::Track::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ireneDict_192_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&irene::Track::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ireneDict_192_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&irene::Track::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ireneDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ireneDict_192_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ireneDict_192_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&irene::Track::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ireneDict_192_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&irene::Track::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ireneDict_192_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&irene::Track::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ireneDict_192_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&irene::Track::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Track", 501, G__ireneDict_192_0_24, (int) ('i'), G__get_linked_tagnum(&G__ireneDictLN_irenecLcLTrack), -1, 0, 1, 1, 1, 0, "u 'irene::Track' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Track", 627, G__ireneDict_192_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ireneDict_192_0_26, (int) ('u'), G__get_linked_tagnum(&G__ireneDictLN_irenecLcLTrack), -1, 1, 1, 1, 1, 0, "u 'irene::Track' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncirenecLcLParticle(void) {
   /* irene::Particle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ireneDictLN_irenecLcLParticle));
   G__memfunc_setup("Particle",820,G__ireneDict_193_0_1, 105, G__get_linked_tagnum(&G__ireneDictLN_irenecLcLParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Particle",820,G__ireneDict_193_0_2, 105, G__get_linked_tagnum(&G__ireneDictLN_irenecLcLParticle), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Particle",820,G__ireneDict_193_0_3, 105, G__get_linked_tagnum(&G__ireneDictLN_irenecLcLParticle), -1, 0, 1, 1, 1, 0, "i - - 0 - pdg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPDGcode",930,G__ireneDict_193_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPDGcode",918,G__ireneDict_193_0_5, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitialVertex",1652,G__ireneDict_193_0_6, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - x d - - 0 - y "
"d - - 0 - z d - - 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInitialVertex",1640,G__ireneDict_193_0_7, 117, G__get_linked_tagnum(&G__ireneDictLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDecayVertex",1424,G__ireneDict_193_0_8, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - x d - - 0 - y "
"d - - 0 - z d - - 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDecayVertex",1412,G__ireneDict_193_0_9, 117, G__get_linked_tagnum(&G__ireneDictLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitialMomentum",1864,G__ireneDict_193_0_10, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - px d - - 0 - py "
"d - - 0 - pz d - - 0 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInitialMomentum",1852,G__ireneDict_193_0_11, 117, G__get_linked_tagnum(&G__ireneDictLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDecayMomentum",1636,G__ireneDict_193_0_12, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - px d - - 0 - py "
"d - - 0 - pz d - - 0 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDecayMomentum",1624,G__ireneDict_193_0_13, 117, G__get_linked_tagnum(&G__ireneDictLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParticleID",1261,G__ireneDict_193_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - partID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticleID",1249,G__ireneDict_193_0_15, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrackLength",1411,G__ireneDict_193_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - length", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackLength",1399,G__ireneDict_193_0_17, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPrimary",1040,G__ireneDict_193_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - is_primary", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPrimary",928,G__ireneDict_193_0_19, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPrimary",928,G__ireneDict_193_0_20, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMother",923,G__ireneDict_193_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "U 'irene::Particle' - 0 - mother", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMother",911,G__ireneDict_193_0_22, 85, G__get_linked_tagnum(&G__ireneDictLN_irenecLcLParticle), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMother",911,G__ireneDict_193_0_23, 85, G__get_linked_tagnum(&G__ireneDictLN_irenecLcLParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTrack",766,G__ireneDict_193_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "U 'irene::Track' - 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTracks",904,G__ireneDict_193_0_25, 117, G__get_linked_tagnum(&G__ireneDictLN_TRefArray), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTracks",904,G__ireneDict_193_0_26, 117, G__get_linked_tagnum(&G__ireneDictLN_TRefArray), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrack",789,G__ireneDict_193_0_27, 85, G__get_linked_tagnum(&G__ireneDictLN_irenecLcLTrack), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDaughter",1085,G__ireneDict_193_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "U 'irene::Particle' - 0 - daughter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDaughters",1223,G__ireneDict_193_0_29, 117, G__get_linked_tagnum(&G__ireneDictLN_TRefArray), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDaughters",1223,G__ireneDict_193_0_30, 117, G__get_linked_tagnum(&G__ireneDictLN_TRefArray), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParameters",1344,G__ireneDict_193_0_31, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - m d - - 0 - q "
"d - - 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParticleName",1505,G__ireneDict_193_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetName",685,G__ireneDict_193_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - code", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Name",385,G__ireneDict_193_0_34, 117, G__get_linked_tagnum(&G__ireneDictLN_string), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitialVolume",1646,G__ireneDict_193_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - vol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInitialVolume",1634,G__ireneDict_193_0_36, 117, G__get_linked_tagnum(&G__ireneDictLN_string), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDecayVolume",1418,G__ireneDict_193_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - vol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDecayVolume",1406,G__ireneDict_193_0_38, 117, G__get_linked_tagnum(&G__ireneDictLN_string), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCreatorProcess",1755,G__ireneDict_193_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - process", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCreatorProcess",1743,G__ireneDict_193_0_40, 117, G__get_linked_tagnum(&G__ireneDictLN_string), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddProperty",1134,G__ireneDict_193_0_41, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - pname d - - 0 - pvalue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindProperty",1254,G__ireneDict_193_0_42, 100, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - pname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMass",692,G__ireneDict_193_0_43, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCharge",874,G__ireneDict_193_0_44, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Energy",618,G__ireneDict_193_0_45, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Momentum",850,G__ireneDict_193_0_46, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IInfo",469,G__ireneDict_193_0_47, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ireneDict_193_0_48, 85, G__get_linked_tagnum(&G__ireneDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&irene::Particle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ireneDict_193_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&irene::Particle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ireneDict_193_0_50, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&irene::Particle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ireneDict_193_0_51, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&irene::Particle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ireneDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ireneDict_193_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ireneDict_193_0_56, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&irene::Particle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ireneDict_193_0_57, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&irene::Particle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ireneDict_193_0_58, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&irene::Particle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ireneDict_193_0_59, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&irene::Particle::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Particle", 946, G__ireneDict_193_0_60, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncirenecLcLEvent(void) {
   /* irene::Event */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ireneDictLN_irenecLcLEvent));
   G__memfunc_setup("Event",514,G__ireneDict_195_0_1, 105, G__get_linked_tagnum(&G__ireneDictLN_irenecLcLEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Event",514,G__ireneDict_195_0_2, 105, G__get_linked_tagnum(&G__ireneDictLN_irenecLcLEvent), -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Event",514,G__ireneDict_195_0_3, 105, G__get_linked_tagnum(&G__ireneDictLN_irenecLcLEvent), -1, 0, 1, 1, 1, 0, "u 'irene::Event' - 11 - right", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__ireneDict_195_0_4, 117, G__get_linked_tagnum(&G__ireneDictLN_irenecLcLEvent), -1, 1, 1, 1, 1, 0, "u 'irene::Event' - 11 - right", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSensorHit",1192,G__ireneDict_195_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'irene::SensorHit' - 0 - hit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSensorHits",1330,G__ireneDict_195_0_6, 85, G__get_linked_tagnum(&G__ireneDictLN_TObjArray), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTrack",766,G__ireneDict_195_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'irene::Track' - 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTracks",904,G__ireneDict_195_0_8, 85, G__get_linked_tagnum(&G__ireneDictLN_TObjArray), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Tracks",616,G__ireneDict_195_0_9, 117, G__get_linked_tagnum(&G__ireneDictLN_vectorlEconstsPirenecLcLTrackmUcOallocatorlEconstsPirenecLcLTrackmUgRsPgR), G__defined_typename("vector<const irene::Track*>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Tracks",616,G__ireneDict_195_0_10, 117, G__get_linked_tagnum(&G__ireneDictLN_vectorlEconstsPirenecLcLTrackmUcOallocatorlEconstsPirenecLcLTrackmUgRsPgR), G__defined_typename("vector<const irene::Track*>"), 0, 1, 1, 1, 8, "u 'string' - 0 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddParticle",1085,G__ireneDict_195_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "U 'irene::Particle' - 0 - particle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticles",1223,G__ireneDict_195_0_12, 85, G__get_linked_tagnum(&G__ireneDictLN_TObjArray), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticles",1223,G__ireneDict_195_0_13, 85, G__get_linked_tagnum(&G__ireneDictLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Particles",935,G__ireneDict_195_0_14, 117, G__get_linked_tagnum(&G__ireneDictLN_vectorlEconstsPirenecLcLParticlemUcOallocatorlEconstsPirenecLcLParticlemUgRsPgR), G__defined_typename("vector<const irene::Particle*>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetID",441,G__ireneDict_195_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__ireneDict_195_0_16, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillHitVector",1311,G__ireneDict_195_0_17, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >' 'vector<std::pair<TLorentzVector,double> >' 1 - evthits u 'string' - 0 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillHitVector",1311,G__ireneDict_195_0_18, 117, G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR), G__defined_typename("vector<std::pair<TLorentzVector,double> >"), 0, 1, 1, 1, 8, "u 'string' - 0 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IClear",560,G__ireneDict_195_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IInfo",469,G__ireneDict_195_0_20, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ireneDict_195_0_21, 85, G__get_linked_tagnum(&G__ireneDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&irene::Event::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ireneDict_195_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&irene::Event::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ireneDict_195_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&irene::Event::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ireneDict_195_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&irene::Event::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ireneDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ireneDict_195_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ireneDict_195_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&irene::Event::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ireneDict_195_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&irene::Event::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ireneDict_195_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&irene::Event::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ireneDict_195_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&irene::Event::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Event", 640, G__ireneDict_195_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlETLorentzVectorcOdoublegR(void) {
   /* pair<TLorentzVector,double> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ireneDictLN_pairlETLorentzVectorcOdoublegR));
   G__memfunc_setup("pair<TLorentzVector,double>",2690,G__ireneDict_204_0_1, 105, G__get_linked_tagnum(&G__ireneDictLN_pairlETLorentzVectorcOdoublegR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pair<TLorentzVector,double>",2690,G__ireneDict_204_0_2, 105, G__get_linked_tagnum(&G__ireneDictLN_pairlETLorentzVectorcOdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'TLorentzVector' - 11 - a d - - 11 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__ireneDictLN_pairlETLorentzVectorcOdoublegR), -1, 1, 1, 1, 4, 0, "u 'pair<TLorentzVector,double>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("pair<TLorentzVector,double>", 2690, G__ireneDict_204_0_4, (int) ('i'), 
G__get_linked_tagnum(&G__ireneDictLN_pairlETLorentzVectorcOdoublegR), -1, 0, 1, 1, 1, 0, "u 'pair<TLorentzVector,double>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pair<TLorentzVector,double>", 2816, G__ireneDict_204_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR(void) {
   /* vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR));
   G__memfunc_setup("at",213,G__ireneDict_206_0_1, 117, G__get_linked_tagnum(&G__ireneDictLN_pairlETLorentzVectorcOdoublegR), G__defined_typename("vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__ireneDict_206_0_2, 117, G__get_linked_tagnum(&G__ireneDictLN_pairlETLorentzVectorcOdoublegR), G__defined_typename("vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__ireneDict_206_0_3, 117, G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__ireneDict_206_0_4, 117, G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__ireneDict_206_0_5, 117, G__get_linked_tagnum(&G__ireneDictLN_reverse_iteratorlEvectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__ireneDict_206_0_6, 117, G__get_linked_tagnum(&G__ireneDictLN_reverse_iteratorlEvectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__ireneDict_206_0_7, 107, -1, G__defined_typename("vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__ireneDict_206_0_8, 107, -1, G__defined_typename("vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__ireneDict_206_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__ireneDict_206_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::size_type' 0 - sz u 'pair<TLorentzVector,double>' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__ireneDict_206_0_11, 107, -1, G__defined_typename("vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__ireneDict_206_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__ireneDict_206_0_13, 117, G__get_linked_tagnum(&G__ireneDictLN_pairlETLorentzVectorcOdoublegR), G__defined_typename("vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__ireneDict_206_0_14, 117, G__get_linked_tagnum(&G__ireneDictLN_pairlETLorentzVectorcOdoublegR), G__defined_typename("vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >",7352,G__ireneDict_206_0_15, 105, G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >",7352,G__ireneDict_206_0_16, 105, G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::size_type' 0 - n u 'pair<TLorentzVector,double>' - 11 '(pair<TLorentzVector,double>)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >",7352,G__ireneDict_206_0_17, 105, G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >",7352,G__ireneDict_206_0_18, 105, G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::iterator' 'vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::const_iterator' 10 - first u 'vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::iterator' 'vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__ireneDict_206_0_19, 117, G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__ireneDict_206_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__ireneDict_206_0_21, 117, G__get_linked_tagnum(&G__ireneDictLN_pairlETLorentzVectorcOdoublegR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__ireneDict_206_0_22, 117, G__get_linked_tagnum(&G__ireneDictLN_pairlETLorentzVectorcOdoublegR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__ireneDict_206_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'pair<TLorentzVector,double>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__ireneDict_206_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__ireneDict_206_0_25, 117, G__get_linked_tagnum(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::iterator' - 0 - position u 'pair<TLorentzVector,double>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__ireneDict_206_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::iterator' - 0 - position u 'vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::iterator' 'vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::const_iterator' 10 - first "
"u 'vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::iterator' 'vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__ireneDict_206_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::iterator' - 0 - position k - 'vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::size_type' 0 - n "
"u 'pair<TLorentzVector,double>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__ireneDict_206_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__ireneDict_206_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__ireneDict_206_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::iterator' - 0 - first u 'vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__ireneDict_206_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >", 7478, G__ireneDict_206_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncirenecLcLParameterInfo(void) {
   /* irene::ParameterInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ireneDictLN_irenecLcLParameterInfo));
   G__memfunc_setup("ParameterInfo",1325,G__ireneDict_209_0_1, 105, G__get_linked_tagnum(&G__ireneDictLN_irenecLcLParameterInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParameterInfo",1325,G__ireneDict_209_0_2, 105, G__get_linked_tagnum(&G__ireneDictLN_irenecLcLParameterInfo), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetContent",1031,G__ireneDict_209_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetContent",1019,G__ireneDict_209_0_4, 117, G__get_linked_tagnum(&G__ireneDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ireneDict_209_0_5, 85, G__get_linked_tagnum(&G__ireneDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&irene::ParameterInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ireneDict_209_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&irene::ParameterInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ireneDict_209_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&irene::ParameterInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ireneDict_209_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&irene::ParameterInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ireneDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ireneDict_209_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ireneDict_209_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&irene::ParameterInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ireneDict_209_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&irene::ParameterInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ireneDict_209_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&irene::ParameterInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ireneDict_209_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&irene::ParameterInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ParameterInfo", 1325, G__ireneDict_209_0_17, (int) ('i'), G__get_linked_tagnum(&G__ireneDictLN_irenecLcLParameterInfo), -1, 0, 1, 1, 1, 0, "u 'irene::ParameterInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ParameterInfo", 1451, G__ireneDict_209_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ireneDict_209_0_19, (int) ('u'), G__get_linked_tagnum(&G__ireneDictLN_irenecLcLParameterInfo), -1, 1, 1, 1, 1, 0, "u 'irene::ParameterInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncireneDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalireneDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcireneDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__ireneDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__ireneDictLN_irene = { "irene" , 110 , -1 };
G__linked_taginfo G__ireneDictLN_irenecLcLSensorHit = { "irene::SensorHit" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_irenecLcLTrack = { "irene::Track" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_irenecLcLParticle = { "irene::Particle" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_irenecLcLEvent = { "irene::Event" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_vectorlEconstsPirenecLcLTrackmUcOallocatorlEconstsPirenecLcLTrackmUgRsPgR = { "vector<const irene::Track*,allocator<const irene::Track*> >" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_reverse_iteratorlEvectorlEconstsPirenecLcLTrackmUcOallocatorlEconstsPirenecLcLTrackmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<const irene::Track*,allocator<const irene::Track*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_vectorlEconstsPirenecLcLParticlemUcOallocatorlEconstsPirenecLcLParticlemUgRsPgR = { "vector<const irene::Particle*,allocator<const irene::Particle*> >" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_reverse_iteratorlEvectorlEconstsPirenecLcLParticlemUcOallocatorlEconstsPirenecLcLParticlemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<const irene::Particle*,allocator<const irene::Particle*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_pairlETLorentzVectorcOdoublegR = { "pair<TLorentzVector,double>" , 115 , -1 };
G__linked_taginfo G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR = { "vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgRcLcLiterator = { "vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::iterator" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_reverse_iteratorlEvectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_irenecLcLParameterInfo = { "irene::ParameterInfo" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR = { "map<string,double,less<string>,allocator<pair<const string,double> > >" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TRef = { "TRef" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TRefArray = { "TRefArray" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_vectorlEpairlEdoublecOintgRcOallocatorlEpairlEdoublecOintgRsPgRsPgR = { "vector<pair<double,int>,allocator<pair<double,int> > >" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_reverse_iteratorlEvectorlEpairlEdoublecOintgRcOallocatorlEpairlEdoublecOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<double,int>,allocator<pair<double,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTSymlEdoublegR = { "TMatrixTSym<double>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTSparselEdoublegR = { "TMatrixTSparse<double>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__ireneDictLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableireneDict() {
  G__ireneDictLN_TClass.tagnum = -1 ;
  G__ireneDictLN_TBuffer.tagnum = -1 ;
  G__ireneDictLN_TMemberInspector.tagnum = -1 ;
  G__ireneDictLN_TObject.tagnum = -1 ;
  G__ireneDictLN_TNamed.tagnum = -1 ;
  G__ireneDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__ireneDictLN_string.tagnum = -1 ;
  G__ireneDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__ireneDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ireneDictLN_TObjArray.tagnum = -1 ;
  G__ireneDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__ireneDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ireneDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__ireneDictLN_irene.tagnum = -1 ;
  G__ireneDictLN_irenecLcLSensorHit.tagnum = -1 ;
  G__ireneDictLN_irenecLcLTrack.tagnum = -1 ;
  G__ireneDictLN_irenecLcLParticle.tagnum = -1 ;
  G__ireneDictLN_TLorentzVector.tagnum = -1 ;
  G__ireneDictLN_irenecLcLEvent.tagnum = -1 ;
  G__ireneDictLN_vectorlEconstsPirenecLcLTrackmUcOallocatorlEconstsPirenecLcLTrackmUgRsPgR.tagnum = -1 ;
  G__ireneDictLN_reverse_iteratorlEvectorlEconstsPirenecLcLTrackmUcOallocatorlEconstsPirenecLcLTrackmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ireneDictLN_vectorlEconstsPirenecLcLParticlemUcOallocatorlEconstsPirenecLcLParticlemUgRsPgR.tagnum = -1 ;
  G__ireneDictLN_reverse_iteratorlEvectorlEconstsPirenecLcLParticlemUcOallocatorlEconstsPirenecLcLParticlemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ireneDictLN_pairlETLorentzVectorcOdoublegR.tagnum = -1 ;
  G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__ireneDictLN_reverse_iteratorlEvectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ireneDictLN_irenecLcLParameterInfo.tagnum = -1 ;
  G__ireneDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__ireneDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__ireneDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__ireneDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__ireneDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__ireneDictLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__ireneDictLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__ireneDictLN_TVector3.tagnum = -1 ;
  G__ireneDictLN_TRef.tagnum = -1 ;
  G__ireneDictLN_TRefArray.tagnum = -1 ;
  G__ireneDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__ireneDictLN_vectorlEpairlEdoublecOintgRcOallocatorlEpairlEdoublecOintgRsPgRsPgR.tagnum = -1 ;
  G__ireneDictLN_reverse_iteratorlEvectorlEpairlEdoublecOintgRcOallocatorlEpairlEdoublecOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTSymlEdoublegR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTSparselEdoublegR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__ireneDictLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableireneDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_string);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ireneDictLN_irene),0,-1,262144,(char*)NULL,G__setup_memvarirene,G__setup_memfuncirene);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ireneDictLN_irenecLcLSensorHit),sizeof(irene::SensorHit),-1,324864,(char*)NULL,G__setup_memvarirenecLcLSensorHit,G__setup_memfuncirenecLcLSensorHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ireneDictLN_irenecLcLTrack),sizeof(irene::Track),-1,324864,(char*)NULL,G__setup_memvarirenecLcLTrack,G__setup_memfuncirenecLcLTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ireneDictLN_irenecLcLParticle),sizeof(irene::Particle),-1,324864,(char*)NULL,G__setup_memvarirenecLcLParticle,G__setup_memfuncirenecLcLParticle);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TLorentzVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ireneDictLN_irenecLcLEvent),sizeof(irene::Event),-1,327424,(char*)NULL,G__setup_memvarirenecLcLEvent,G__setup_memfuncirenecLcLEvent);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_vectorlEconstsPirenecLcLTrackmUcOallocatorlEconstsPirenecLcLTrackmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_reverse_iteratorlEvectorlEconstsPirenecLcLTrackmUcOallocatorlEconstsPirenecLcLTrackmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_vectorlEconstsPirenecLcLParticlemUcOallocatorlEconstsPirenecLcLParticlemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_reverse_iteratorlEvectorlEconstsPirenecLcLParticlemUcOallocatorlEconstsPirenecLcLParticlemUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ireneDictLN_pairlETLorentzVectorcOdoublegR),sizeof(pair<TLorentzVector,double>),-1,297216,(char*)NULL,G__setup_memvarpairlETLorentzVectorcOdoublegR,G__setup_memfuncpairlETLorentzVectorcOdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR),sizeof(vector<pair<TLorentzVector,double>,allocator<pair<TLorentzVector,double> > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR,G__setup_memfuncvectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_vectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_reverse_iteratorlEvectorlEpairlETLorentzVectorcOdoublegRcOallocatorlEpairlETLorentzVectorcOdoublegRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ireneDictLN_irenecLcLParameterInfo),sizeof(irene::ParameterInfo),-1,324864,(char*)NULL,G__setup_memvarirenecLcLParameterInfo,G__setup_memfuncirenecLcLParameterInfo);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TRef);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TRefArray);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_vectorlEpairlEdoublecOintgRcOallocatorlEpairlEdoublecOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_reverse_iteratorlEvectorlEpairlEdoublecOintgRcOallocatorlEpairlEdoublecOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTSymlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTSparselEdoublegR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__ireneDictLN_TMatrixTSparseDiaglEdoublegR);
}
extern "C" void G__cpp_setupireneDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupireneDict()");
  G__set_cpp_environmentireneDict();
  G__cpp_setup_tagtableireneDict();

  G__cpp_setup_inheritanceireneDict();

  G__cpp_setup_typetableireneDict();

  G__cpp_setup_memvarireneDict();

  G__cpp_setup_memfuncireneDict();
  G__cpp_setup_globalireneDict();
  G__cpp_setup_funcireneDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncireneDict();
  return;
}
class G__cpp_setup_initireneDict {
  public:
    G__cpp_setup_initireneDict() { G__add_setup_func("ireneDict",(G__incsetup)(&G__cpp_setupireneDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initireneDict() { G__remove_setup_func("ireneDict"); }
};
G__cpp_setup_initireneDict G__cpp_setup_initializerireneDict;

